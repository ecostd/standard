#|
Copyright RenÃ© Ferdinand Rivera Morell
|#

require-b2 5.3 ;

path-constant JSCHEMA_CHECK_PY : jschema_check.py ;

actions json-valid
{
	python "$(JSCHEMA_CHECK_PY)" --schema "$(>[2])" --input "$(>[1])" > "$(<)"
}

actions json-invalid
{
	python "$(JSCHEMA_CHECK_PY)" --schema "$(>[2])" --input "$(>[1])" --negate > "$(<)"
}

path-constant SCHEMA_DIR : ../src ;

local validate-success = [ glob std_*/*-valid.json ] ;
local validate-fail = [ glob std_*/*-valid-fail.json ] ;

local validations ;
for local json in $(validate-success)
{
	local schema = $(SCHEMA_DIR)/$(json:D).json ;
	local check = $(json:B:S=.check) ;
	validations += [ make $(check) : $(json) $(schema) : @json-valid ] ;
	explicit $(check) ;
}
for local json in $(validate-fail)
{
	local schema = $(SCHEMA_DIR)/$(json:D).json ;
	local check = $(json:B:S=.check) ;
	validations += [ make $(check) : $(json) $(schema) : @json-invalid ] ;
	explicit $(check) ;
}
alias validate : $(validations) ;
